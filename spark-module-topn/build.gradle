//----------------------------------------------------------------------------------------------------------------------
// Gradle plugins from plugin central
//----------------------------------------------------------------------------------------------------------------------
plugins {
  id "java"
  id "maven"
  id "idea"
  id "checkstyle"
}

//----------------------------------------------------------------------------------------------------------------------
// Source code compatibility settings
//----------------------------------------------------------------------------------------------------------------------

if (!JavaVersion.current().java8Compatible) {
  throw new IllegalStateException("Must be built at least with Java 1.8")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  }
}

//----------------------------------------------------------------------------------------------------------------------
// Target jar group and version
//----------------------------------------------------------------------------------------------------------------------

group = "spark.module.topn"
version = "0.1.0"

//----------------------------------------------------------------------------------------------------------------------
// Project repositories
//----------------------------------------------------------------------------------------------------------------------

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

//----------------------------------------------------------------------------------------------------------------------
// Project dependencies
//----------------------------------------------------------------------------------------------------------------------

dependencies {
  // Apache Spark core
  compile "org.apache.spark:spark-core_2.10:1.5.1"

  // Job server API
  compile "spark.job.server:spark-job-interface:0.1.0"

  testCompile 'junit:junit:4.12'
}


configurations.all {
  resolutionStrategy {
    // force certain versions of dependencies (including transitive)
    //  *append new forced containers:
    force(
      // hadoop we are working with is in the latest version
      "org.apache.hadoop:hadoop-client:2.7.1"
    )
  }
}

task installDist(dependsOn: [jar])

// ---------------------------------------------------------------------------------------------------------------------
// checkstyle
// ---------------------------------------------------------------------------------------------------------------------

def checkstyleConfigDir = new File(buildscript.sourceFile.parentFile, '../config/checkstyle')

checkstyle {
  configFile = new File(checkstyleConfigDir, "checkstyle.xml")
  configProperties.checkstyleConfigDir = checkstyleConfigDir
}

// ---------------------------------------------------------------------------------------------------------------------
// ssh deployment configuration
// ---------------------------------------------------------------------------------------------------------------------

task installHost(dependsOn: "installDist") << {
  ssh.run {
    session(remotes.jobServer) {
      def result = execute "uptime"
      println "HOST UPTIME: ${result}"

      println "HOST: remove /home/${jobServerUser}/run/${project.name}"
      execute "rm -rf /home/${jobServerUser}/run/${project.name}"

      println "HOST: create clean /home/${jobServerUser}/run/${project.name}"
      execute "mkdir -p /home/${jobServerUser}/run/${project.name}/install"

      println "HOST: copy distribution..."
      put from: "${buildDir}/libs", into: "/home/${jobServerUser}/run/${project.name}/install"
    }
  }
}